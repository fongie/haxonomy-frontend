{"ast":null,"code":"import _defineProperty from \"/Users/ocean/Documents/KTH/XJobb/Haxonomy Web App/haxonomy-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/ocean/Documents/KTH/XJobb/Haxonomy Web App/haxonomy-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ocean/Documents/KTH/XJobb/Haxonomy Web App/haxonomy-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ocean/Documents/KTH/XJobb/Haxonomy Web App/haxonomy-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ocean/Documents/KTH/XJobb/Haxonomy Web App/haxonomy-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ocean/Documents/KTH/XJobb/Haxonomy Web App/haxonomy-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ocean/Documents/KTH/XJobb/Haxonomy Web App/haxonomy-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ocean/Documents/KTH/XJobb/Haxonomy Web App/haxonomy-frontend/src/pages/Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { auth } from '../components/Auth';\nimport { server } from '../config';\n/**\n * Presents the user with a log in form taking username and password. The given values is then posted to the server as a\n * form using fetch.\n */\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      redirectToReferrer: false,\n      username: \"\",\n      password: \"\",\n      usernameError: \"\",\n      passwordError: \"\",\n      genericErrorMessage: \"*required\"\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.login = _this.login.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.errors = _this.errors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Checks if any of the input fields are empty and in that case sets the corresponding error state variable to an\n   * error message.\n   * @returns {boolean}\n   */\n\n\n  _createClass(Login, [{\n    key: \"errors\",\n    value: function errors() {\n      var _this2 = this;\n\n      var error = false;\n\n      if (this.state.username === null || this.state.username === \"\") {\n        this.setState(function () {\n          return {\n            usernameError: _this2.state.genericErrorMessage\n          };\n        });\n        error = true;\n      }\n\n      if (this.state.password === null || this.state.password === \"\") {\n        this.setState(function () {\n          return {\n            passwordError: _this2.state.genericErrorMessage\n          };\n        });\n        error = true;\n      }\n\n      return error;\n    }\n    /**\n     * Checks for errors and then posts the login form to the server. Checks if the user has the right authority.\n     * If not, the user is not allowed to log in. On success sets authenticated to true and adds username in const auth in file\n     * Auth. Displays alert box with error message on fail.\n     * @param event\n     */\n\n  }, {\n    key: \"login\",\n    value: function login(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      if (this.errors()) return;\n      var data = new FormData(event.target);\n      var url = server;\n      fetch(url + '/perform_login', {\n        credentials: 'include',\n        method: 'POST',\n        body: data\n      }).then(function (response) {\n        console.log(response);\n        if (!response.ok && response.status === 401) throw new Error(\"Wrong username or password\");else if (!response.ok) throw new Error(\"Oops! Something went wrong. Please try again in a few minutes.\");else return response.json();\n      }).then(function (data) {\n        auth.authenticate(function () {\n          data.roles[0].name === \"applicant\" ? _this3.setState({\n            redirectToReferrer: true\n          }, function () {\n            auth.user = data.username;\n\n            _this3.props.history.replace('/application');\n          }) : alert(\"You are not authorized to use this web site. \\n Required authority: applicant \\n Your authority: \" + data.roles[0].name);\n        });\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var _this$setState;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, name + \"Error\", null), _this$setState));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _ref = this.props.location.state || {\n        from: {\n          pathname: '/'\n        }\n      },\n          from = _ref.from;\n\n      var redirectToReferrer = this.state.redirectToReferrer;\n\n      if (redirectToReferrer === true) {\n        return React.createElement(Redirect, {\n          to: from,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Username:\", React.createElement(\"input\", {\n        name: \"username\",\n        type: \"text\",\n        value: this.state.username,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), !!this.state.usernameError && React.createElement(\"p\", {\n        style: {\n          color: 'red',\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.usernameError)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Password:\", React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), !!this.state.passwordError && React.createElement(\"p\", {\n        style: {\n          color: 'red',\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.passwordError)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this4.props.history.replace('/register');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Register\"));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["/Users/ocean/Documents/KTH/XJobb/Haxonomy Web App/haxonomy-frontend/src/pages/Login.js"],"names":["React","Component","Redirect","auth","server","Login","props","state","redirectToReferrer","username","password","usernameError","passwordError","genericErrorMessage","handleInputChange","bind","login","errors","error","setState","event","preventDefault","data","FormData","target","url","fetch","credentials","method","body","then","response","console","log","ok","status","Error","json","authenticate","roles","name","user","history","replace","alert","catch","message","value","location","from","pathname","color","float"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {\n    Redirect,\n} from \"react-router-dom\";\nimport {auth} from '../components/Auth';\nimport {server} from '../config';\n\n/**\n * Presents the user with a log in form taking username and password. The given values is then posted to the server as a\n * form using fetch.\n */\nclass Login extends Component{\n\n    state = {\n        redirectToReferrer: false,\n        username: \"\",\n        password: \"\",\n        usernameError: \"\",\n        passwordError: \"\",\n        genericErrorMessage: \"*required\"\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.login = this.login.bind(this);\n        this.errors = this.errors.bind(this);\n    }\n\n    /**\n     * Checks if any of the input fields are empty and in that case sets the corresponding error state variable to an\n     * error message.\n     * @returns {boolean}\n     */\n    errors(){\n        let error = false;\n        if (this.state.username === null || this.state.username === \"\") {\n            this.setState(() => ({ usernameError: this.state.genericErrorMessage}));\n            error = true;\n        }\n        if (this.state.password === null || this.state.password === \"\") {\n            this.setState(() => ({ passwordError: this.state.genericErrorMessage}));\n            error = true;\n        }\n        return error;\n\n    }\n\n    /**\n     * Checks for errors and then posts the login form to the server. Checks if the user has the right authority.\n     * If not, the user is not allowed to log in. On success sets authenticated to true and adds username in const auth in file\n     * Auth. Displays alert box with error message on fail.\n     * @param event\n     */\n    login(event){\n        event.preventDefault();\n        if(this.errors())\n            return;\n\n        const data = new FormData(event.target);\n        const url = server;\n\n        fetch(url + '/perform_login', {\n            credentials: 'include',\n            method: 'POST',\n            body: data,\n        })\n            .then((response) => {\n                console.log(response)\n                if(!response.ok && response.status === 401) throw new Error(\"Wrong username or password\");\n                else if(!response.ok) throw new Error(\"Oops! Something went wrong. Please try again in a few minutes.\");\n                else return response.json();\n            })\n            .then((data) => {\n                auth.authenticate(() => {\n                    data.roles[0].name === \"applicant\" ?\n                    this.setState({ redirectToReferrer: true }, ()=>{auth.user = data.username; this.props.history.replace('/application')})\n                :\n                    alert(\"You are not authorized to use this web site. \\n Required authority: applicant \\n Your authority: \" + data.roles[0].name);\n                });\n            })\n            .catch((error) => {alert(error.message)});\n    };\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n\n        this.setState({\n            [name]: value,\n            [name + \"Error\"]: null,\n\n        });\n    }\n\n    render(){\n\n        const { from } = this.props.location.state || { from: { pathname: '/' } }\n        const { redirectToReferrer } = this.state\n\n        if (redirectToReferrer === true) {\n            return <Redirect to={from} />\n        }\n\n        return(\n            <div>\n                <form onSubmit={this.login}>\n                    <label>\n                        Username:\n                        <input\n                            name=\"username\"\n                            type=\"text\"\n                            value={this.state.username}\n                            onChange={this.handleInputChange}/>\n                        {!!this.state.usernameError && (<p style={{color: 'red', float: \"right\"}}>{this.state.usernameError}</p>)}\n                    </label>\n                    <br />\n                    <label>\n                        Password:\n                        <input\n                            name=\"password\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}/>\n                        {!!this.state.passwordError && (<p style={{color: 'red', float: \"right\"}}>{this.state.passwordError}</p>)}\n                    </label>\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <br/>\n                <button onClick={()=>this.props.history.replace('/register')}>Register</button>\n            </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}